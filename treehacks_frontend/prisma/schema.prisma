// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Test {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("posts")
}

model User {
  id            Int          @id @default(autoincrement())
  username      String       @unique
  password      String
  age           Int
  userCuisines  UserCusine[]
  userDiets     UserDiet[]
  userGoals     UserGoal[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  @@map("users")
}

model Goal {
  id  Int    @id @default(autoincrement())
  name String
  userGoals UserGoal[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("goal")
}

model Cusine {
  id           Int          @id @default(autoincrement())
  name         String
  userCuisines UserCusine[] 
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  @@map("cuisines")
}

model Diet {
  id  Int    @id @default(autoincrement())
  name String
  userDiets UserDiet[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("diet")
}

model UserCusine {
  id         Int      @id @default(autoincrement())
  userId     Int      
  cusineId   Int      
  user       User     @relation(fields: [userId], references: [id])
  cusine     Cusine   @relation(fields: [cusineId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  @@map("user_cuisines")
}


model UserDiet {
  id         Int      @id @default(autoincrement())
  userId     Int      
  dietId     Int      
  user       User     @relation(fields: [userId], references: [id])
  diet       Diet   @relation(fields: [dietId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  @@map("user_diets")
}


model UserGoal {
  id         Int      @id @default(autoincrement())
  userId     Int      
  goalId     Int      
  user       User     @relation(fields: [userId], references: [id])
  goal       Goal   @relation(fields: [goalId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  @@map("user_goals")
}
